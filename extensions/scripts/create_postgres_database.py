import argparse
import json
import socket
import time
import psycopg2


def connectPsqlRoot(autocommit = False):
    conn = psycopg2.connect(
        host="localhost",
        database="postgres",
        user="postgres",
        password="123qwe"
    )
    cur = conn.cursor()
    conn.autocommit = autocommit
    return conn, cur

dbName = 'db_postgres_test'
dbUser = 'db_postgres_test'
dbPass = 'db_postgres_test'
def connectPsql(autocommit = False):
    conn = psycopg2.connect(
        host="localhost",
        database=dbName,
        user=dbUser,
        password=dbPass
    )
    cur = conn.cursor()
    conn.autocommit = autocommit
    return conn, cur

def psqlQuery(cur, sql, autocommit = False):
    cur.execute(sql)
    try:
        records = cur.fetchall()
        print(f'result: {records}')
        return records
    except Exception as err:
        print(f'psqlQuery | error: {err}')
        return None
def createDatabase():

    _, curSel = connectPsqlRoot()
    result = psqlQuery(curSel, f"""
    SELECT 1 FROM pg_user WHERE usename = '{dbUser}';
    """)
    if result:
        pass
    else:
        _, cur = connectPsqlRoot(autocommit=True)
        cur.execute(f"""
        CREATE USER {dbUser} WITH PASSWORD '{dbPass}' CREATEDB CREATEROLE;
        """)


    result = psqlQuery(curSel, """
    SELECT 1 FROM pg_database WHERE datname = 'db_postgres_test';
    """)
    if result:
        pass
    else: 
        conn, cursor = connectPsqlRoot(autocommit=True)
        cursor.execute(f'CREATE DATABASE {dbName}')
        cursor.execute(f'GRANT ALL PRIVILEGES ON DATABASE {dbName} TO {dbUser}')
        cursor.close()
        conn.close()



    # result = psqlQuery(cur, """
    # SELECT 1 FROM pg_database WHERE datname = 'db_postgres_test';
    # """)
    # if result:
    #     pass
    # else: 
    #     conn, cursor = connectPsql(autocommit=True)
    #     cursor.execute(f'CREATE DATABASE {dbName}')
    #     cursor.execute(f'GRANT ALL PRIVILEGES ON DATABASE {dbName} TO {dbUser}')
    #     cursor.close()
    #     conn.close()

    conn, cur = connectPsql(autocommit=True)
    cur.execute(f"""
    CREATE TABLE IF NOT EXISTS test (
        did     integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        title   varchar(40) NOT NULL,
        boolField   bool
        description varchar(255)
    );
    """)
    cur.close()
    conn.close()
